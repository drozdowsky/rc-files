#!/bin/sh
#
# https://github.com/mitchweaver/bin
# https://github.com/drozdowsky
#
# Simple volume control
#

usage() {
    echo "vol: change volume"
    echo "Usage: vol [-+=value]"
    echo "       vol -mute"
    echo "       vol -unmute"
    echo "       vol -ismute"
    exit 0
}

unmute() {
    case $(uname) in
        Linux) amixer sset Master unmute ;;
        OpenBSD) mixerctl -q outputs.master.mute=off;;
        Darwin) osascript -e 'set volume output muted false';;
    esac
}

mute() {
    case $(uname) in
        Linux) amixer sset Master toggle ;;
        OpenBSD) mixerctl -q outputs.master.mute=toggle;;
        FreeBSD) mixer vol 0;;
        Darwin) osascript -e 'set volume output muted true';;
    esac
}

setv() {
    unmute 
    case $(uname) in
        Linux)
            if [ -x "$(command -v pulseaudio)" ]; then
                pactl set-sink-volume @DEFAULT_SINK@ "$1"%
            else
                amixer sset Master "$1"
            fi
            ;;
        OpenBSD) mixerctl -q outputs.master="$1";;
        FreeBSD) mixer vol "$1";;
        Darwin) osascript -e "set volume output volume $1";;
    esac
}

incv() {
    unmute 
    case $(uname) in
        Linux)
            if [ -x "$(command -v pulseaudio)" ]; then
                pactl set-sink-volume @DEFAULT_SINK@ +"$1"%
            else
                amixer sset Master "$1"+
            fi
            ;;
        OpenBSD) mixerctl -q outputs.master="+$1";;
        FreeBSD) mixer vol "+$1";;
        Darwin) osascript -e "set volume output volume $1+(output volume of (get volume settings))";;
    esac
}

decv() {
    unmute 
    case $(uname) in
        Linux)
            if type pulseaudio > /dev/null 2>&1 ; then
                pactl set-sink-volume @DEFAULT_SINK@ -"$1"%
            else
                amixer sset Master "$1"-
            fi
            ;;
        OpenBSD) mixerctl -q outputs.master="-$1";;
        FreeBSD) mixer vol "-$1";;
        Darwin) osascript -e "set volume output volume (output volume of (get volume settings))-$1";;
    esac
}

ismute() {
    case $(uname) in
        Linux)
            if $(amixer -q sget Master | grep -o '\[off\]' > /dev/null) ; then
                echo "muted"
            else
                echo "unmuted"
            fi ;;
        OpenBSD)
            if [ $(mixerctl -n outputs.master.mute) = on ] ; then
                echo "muted"
            else
                echo "unmuted"
            fi ;;
        FreeBSD)
            echo "unmuted"
            ;;
        Darwin)
            if [ "$(osascript -e 'output muted of (get volume settings)')" = "true" ]; then
                echo "muted"
            else
                echo "unmuted"
            fi
            ;;
    esac
}

get_vol() {
    if [ "$(ismute)" = "muted" ]; then
        echo "muted"
        exit 0
    fi
    case $(uname) in
        Linux) 
            if [ -x "$(command -v pulseaudio)" ]; then
				vol=`pactl get-sink-volume @DEFAULT_SINK@ | head -n1 | sed -e 's,.* \([0-9][0-9]*\)%.*,\1,'`
			else
				vol="$(amixer sget Master | \
					grep -oE '\[*..?.?%\]' | \
					sed -e 's/\[//' -e 's/\%\]//')"
            fi
		;;
        OpenBSD)
            vol="$(mixerctl -n outputs.master)"
            vol=${vol%,*}

            # convert 0-255 to 0-100%
            vol=$(echo ${vol} \* 0.4 | bc)
            # convert back to int
            vol=${vol%.*}
        ;;
        FreeBSD)
            vol="$(mixer vol)"
            vol="$(echo ${vol} | grep -Eo '[0-9]+$')"
        ;;
        Darwin)
            vol=$(osascript -e 'set ovol to output volume of (get volume settings)')
        ;;
    esac

    # clamp
    [ $vol -lt 0    ] && vol=0 ||
    [ $vol -gt 100  ] && vol=100

    echo "${vol}%"
}

case "$1" in
    -mute) mute ;;
    -unmute) unmute ;;
    -ismute) ismute && exit 0 ;;
    --help|-h) usage ;;
    -[0-9]*) decv "${1##-}" > /dev/null ;;
    +[0-9]*) incv "${1##+}" > /dev/null ;;
    =*|[0-9]*) setv "${1##=}" ;;
esac

get_vol
